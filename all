using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp1
{
    class Program
    
            static void Main(string[] args)
        {
        
        EXERCISE 3: SUM OF MULTIPLE INPUTS (ALSO ARRAY)
        
        static void Main(string[] args)
        {
            Sum(5);
            Sum(5, 10, 15);
            Sum(5, 1, 3, 4, 2);

            int[] myArray = { 10, 20, 30, 40, 50, 60, 70, 80, 90, 100 };
            Sum(myArray);
        }
        public static void Sum(params int[] myArray)
        {
            int sum = 0;
            for (int i = 0; i < myArray.Length; i++)
            {
                sum += myArray[i];
            }
            Console.WriteLine("The sum is {0, 9}", sum);
        }
        
        static void Main(string[] args)
        {
            Console.WriteLine("Enter a number");
            int number = int.Parse(Console.ReadLine());
            int summed = Sum(number);
            Console.WriteLine("{0} summed is {1}", number, summed);
        }
        public static int Sum(params int[] number)
        {
            for (int i = 0; i < number.Length; i++)
            {
                int answer = number[i] + number[i];
                return answer;
            }
        }
        
        //EXERCISE 2: SQAURED AND CUBED (in Square())
        FOUT
        //{
        //    Console.WriteLine("ENTER A NUMBER");
        //    float number = float.Parse(Console.ReadLine());
        //    Square(number);
        //}
        //public static void Square(float number)
        //{
        //    for (int i = 0; i < 1; i++)
        //    {
        //        float answerSquare = number * number;
        //        Console.WriteLine(answerSquare);
        //        Cube(answerSquare);
        //    }
        //}
        //public static void Cube(float numberSquare)
        //{
        //    for (int i = 0; i < 1; i++)
        //    {
        //        float answerCube = numberSquare * numberSquare;
        //        Console.WriteLine(answerCube);
        //    }
        //}
        GOED
        static void Main(string[] args)
        {
            Console.WriteLine("ENTER A NUMBER");
            int number = int.Parse(Console.ReadLine());
            int squared = Square(number);
            Console.WriteLine("{0} squared is {1}", number, squared);
            int cubed = Cube(number);
            Console.WriteLine("{0} cubed is {1}", number, cubed);

        }
        public static int Square(int number)
        {
            int answer = number * number;
            return answer;
        }
        public static int Cube(int number)
        {
            int answer = Square(number) * number;
            return answer;
        }
        
        //EXERCISE 1: TABLE OF 10 of int number = int.Parse(Console.ReadLine());
        
        static void Main(string[] args)
        {
            Console.WriteLine("Enter a number");
            int number = int.Parse(Console.ReadLine());
            MultiplicationTable(number);
        }
        public static void MultiplicationTable(int number)
        {
            for (int i = 2; i < 11; i++)
            {
                int answer = number * i;
                Console.WriteLine("{0,1} * {1,1} = {2,1}", i, number, answer);
            }
        }
        
            
        
            //NAME PARAMETERS 
        {
            Add(5);
            Add(5, 5);
            Add(5, z: 5);
        }
        public static void Add(int x, int y = 1, int z = 2)
        {
            int answer = x + y + z;
            Console.WriteLine(answer);
        }
        
            //METHOD OVERLOADING
            
            {
            Add(5, 6);
            Add("Hello", "world");
            Add(5.5, 6.2);
        }
        public static void Add(int x, int y)
        {
            int answer = x + y;
            Console.WriteLine(answer);
        }
        public static void Add(string x, string y)
        {
            string answer = x + " " + y;
            Console.WriteLine(answer);
        }
        public static void Add(double x, double y)
        {
            double answer = x + y;
            Console.WriteLine(answer);
        }
        
            //PARAMS KEYWORD (WITH THIS YOU CAN ADD VALUES (SEE line 19)
            
            int[] myArray = { 5, 6, 7, 8, 9, 10 };
            PrintArray(myArray);
            Console.WriteLine("Hello {0} {1} {2} {3}", 5, 6, 7, 8);
            PrintArray(1, 2, 3, 4, 5, 6);
        }
        public static void PrintArray(params int[] array)
        {
            for (int i = 0; i < array.Length; i++)
            {
                Console.WriteLine(array[i]);
            }
        
            //OUT KEYWORD (PASSING VALUE WITHOUT FILLING IN THE NUMBERS IN MAIN
            
            {
            int add;
            int mult;
            AddandMult(5, 10, out add, out mult);
            Console.WriteLine(add);
            Console.WriteLine(mult);
        }
        public static void AddandMult(int a, int b, out int added, out int mult)
        {
            added = a + b;
            mult = a * b;
        }
        
            //REF KEYWORD (PASSES THE MEMORY LOCATION INSTEAD OF THE VALUE)
            
            {
            int studentGrade = 75;
            GiveExtraCredit(ref studentGrade);
            Console.WriteLine(studentGrade);
        }

        public static void GiveExtraCredit(ref int studentGrade)
        {
            studentGrade += 3;
        }
            
        {
            //Pass by Value (SENDS COPY OR VALUE ITSELF TO THE FUNCTION)
            int student1Grade = 75;
            Console.WriteLine("Students grade before extra credit {0}", student1Grade);
            GiveExtraCredit(student1Grade);
            Console.WriteLine("Students grade after extra credit {0}", student1Grade);


            //Pass by Reference
            int[] grades = new int[1];
            grades[0] = 75;
            Console.WriteLine("Students array grade before extra credit {0}", grades[0]);
            GiveExtraCreditArray(grades);
            Console.WriteLine("Students array grade after extra credit {0}", grades[0]);
        }


        public static void GiveExtraCredit (int studentsGrade)
        {
            studentsGrade += 3;
            Console.WriteLine("Students grade after extra credit inside function {0}", studentsGrade);
        }

        public static void GiveExtraCreditArray(int[] grades)
        {
            grades[0] += 3;
        }
        
            //METHODS, create a method
            
            namespace Methods
{
    class Program
    {
        static void Main(string[] args)
        {
            Add(4, 19);
            Add(5, 82);
        }

        public static void Add(int number1, int number2)
        {
            int answer = number1 + number2;
        }
    }
}

----------------------------------------------------------------------------
        
            ////STRING INTERNAL ARRAY
            //string s = "Hello;";
            //Console.WriteLine(s[0]);

            ////STRING CONTAINS METHOD
            //string t = "Hello";
            //if (t.Contains("H"))
            //{
            //    Console.WriteLine(t);
            //}

            ////STRING REMOVE METHOD
            //string r = "Hello";
            //r = r.Remove(0, 1);
            //Console.WriteLine(r);

            ////STRING INSERT METHOD
            //string i = "Hello";
            //i = i.Insert(0, "H");
            //Console.WriteLine(i);

            ////STRING LENGTH PROPERTY
            //string n = "Hello";
            //n = n.Insert(0, "OK");
            //Console.Writeline(i.Length);

            //GALGJE EXERCISE
            
            //RANDOM WORD STUFF
            string[] words = { "love", "kirrie", "gerrie", "huis", "sexy", "babe", "croissant", "taco" };
            Random random = new Random();
            int randomIndex = random.Next(0, 8);
            string selectedWord = words[randomIndex];
            string hiddenWord = "";
            for (int i = 0; i < selectedWord.Length; i++)
            {
                hiddenWord += "*";
            }
            
            //GUESSING WORD STUFF
            while (hiddenWord.Contains("*"))
            {
                Console.WriteLine("Word: {0}", hiddenWord);
                Console.WriteLine("Guess a letter ->");
                char letter = char.Parse(Console.ReadLine());
                bool containsLetter = false;
                for (int i = 0; i < selectedWord.Length; i++)
                {
                    if (selectedWord[i] == letter)
                    {
                        hiddenWord = hiddenWord.Remove(i, 1);
                        hiddenWord = hiddenWord.Insert(i, letter.ToString());
                        containsLetter = true;
                    }
                }
                if (containsLetter == true) 
                {
                    Console.ForegroundColor = ConsoleColor.Green;
                    Console.WriteLine("Yes, {0} is in the word", letter);
                }
                else
                {
                    Console.ForegroundColor = ConsoleColor.Red;
                    Console.WriteLine("Sorry, {0} is not in the word", letter);
                }
                Console.ResetColor();
            }

            Console.WriteLine("Congratulations, you win! The word was {0}", selectedWord);
        
            //TEACHER ENTERS AMOUNT OF STUDENTS, THEIR GRADE AND HIGHEST AND AVERAGE GRADES
            Console.WriteLine("Hoeveel studenten?");
            int amountOfStudents = int.Parse(Console.ReadLine());

            double averageGrade = 0;
            double highestGrade = 0;
            string highestGradeName = "";

            string[] studentNames = new string[amountOfStudents];
            double[] studentGrade = new double[amountOfStudents];

            for (int i = 0; i < amountOfStudents; i++)
            {
                Console.WriteLine("Voeg de naam van student #{0} toe", i + 1);
                string name = Console.ReadLine();
                studentNames[i] = name;
                Console.WriteLine("Voeg het cijfer van student #{0} toe", i + 1);
                double grade = double.Parse(Console.ReadLine());
                studentGrade[i] = grade;
                averageGrade += grade; 
                if (grade > highestGrade)
                {
                    highestGrade = grade;
                    highestGradeName = name;
                }
            }
            //printing
            double average = averageGrade / amountOfStudents; //averageGrade /= amountOfStudents;
            Console.WriteLine("Het gemiddelde cijfer van de klas is: {0}.", average);
            Console.WriteLine("{0} heeft het beste cijfer met een {1}.", highestGradeName, highestGrade);
        
            //MY TRY

            //int[] myPostcodes = { 8021, 8022, 8023, 8024, 8025, 8026, 8027, 8028, 8029, 8030 };

            //Console.WriteLine("Enter postcode:");
            //int postcodesDelivered = int.Parse(Console.ReadLine());

            //bool contains = false;

            //for (int i = 0; i < myPostcodes.Length; i++)
            //{
            //    if (postcodesDelivered == myPostcodes[i])
            //    {
            //        contains = true;
            //        postcodesDelivered = myPostcodes[i];
            //        break;
            //    }
            //}
            //if (contains == true)
            //{
            //    Console.WriteLine("DELIVERED");
            //}
            //else
            //{
            //    Console.WriteLine("POSTCODE NOT IN AREA");
            //}

            //SOLUTION EXERCISE

            //string[] zipcodes = { "100010", "123545", "115263", "146731", "123874", "124816", "485738", "985729", "988374", "457228" };

            //Console.WriteLine("Enter zipcodes");
            //string code = Console.ReadLine();

            //bool found = false;

            //for (int i = 0; i < zipcodes.Length; i++)
            //{
            //    if (code == zipcodes[i])
            //    {
            //        found = true;
            //        break;
            //    }
            //}

            //if (found == true)
            //{
            //    Console.WriteLine("We do ship to this zipcode");
            //}
            //else
            //{
            //    Console.WriteLine("We do not ship to this zipcode");
            //}
        
            //RECTANGULAR ARRAYS

            int[,] myArray = new int[3, 4];
            myArray[0, 1] = 1;
            myArray[0, 2] = 4;
            myArray[0, 3] = 5;

            myArray[1, 1] = 1;
            myArray[1, 2] = 4;
            myArray[1, 3] = 5;

            myArray[2, 1] = 1;
            myArray[2, 2] = 4;
            myArray[2, 3] = 5;

            for (int i = 0; i < 3; i++)
            {
                for (int j = 0; j < 4; j++)
                {
                    Console.WriteLine(myArray[i, j]);
                }
            }
            Console.WriteLine();

            //JAGGER ARRAYS

            int[][] myArray = new int[3][];
            myArray[0] = new int[4] { 5, 6, 7, 8 };
            myArray[1] = new int[10] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
            myArray[2] = new int[2] { 1, 2 };

            for (int i = 0; i < 3; i++)
            {
                for (int j = 0; j < myArray[i].Length; j++)
                {
                    Console.WriteLine(myArray[i][j]);
                }
                Console.WriteLine();
            }
          
            //REVERSE ARRAY
            
            int[] myArray = { 210, 540, 1230, 1230 };
            Array.Reverse(myArray);

            for (int i = 0; i < myArray.Length; i++)
            {
                Console.WriteLine(myArray[i]);
            }
            
            //SORTING ARRAY

            int [] myArray = { 1, 2, 3, 5, 7, 2, 1, 7 };
            Array.Sort(myArray);
            for (int i = 0; i < myArray.Length; i++)
            {
                Console.WriteLine(myArray[i]);
            }t
        
            //BINARY SEARCH

            int[] myArray = { 30, 34, 35, 39, 49, 50, 51, 55, 56 };
            Console.WriteLine("Enter a number to check if it exists:");
            int number = int.Parse(Console.ReadLine());

            int answer = Array.BinarySearch(myArray, number);
            if (answer < 0)
            {
                Console.WriteLine("Number does not exist");
            }
            else
            {
                Console.WriteLine("The numbers position is {0}", answer);
            }
        
            //SEARCHING ARRAYS AND PARALLEL ARRAYS
            
            string[] students = { "Bob", "Tom", "Ted", "Fred" };
            int[] grades = { 77, 50, 12, 99 };
            string[] cities = { "Paris", "Stockholm", "Amsterdam", "New York" };

            Console.WriteLine("Enter students name to search for:");
            string studentsName = Console.ReadLine();

            bool contains = false;
            int studentGrades = 0;
            string cityOfOrigin = "";
            for(int i = 0; i < students.Length; i++)
            {
                if (studentsName == students[i])
                {
                    contains = true;
                    studentGrades = grades[i];
                    cityOfOrigin = cities[i];
                    break;
                }
            }
            if (contains == true)
            {
                Console.WriteLine("This student is in the class");
                Console.WriteLine("The students grade is: {0}", studentGrades);
                Console.WriteLine("He is from: {0}", cityOfOrigin);
            }
            else
            {
                Console.WriteLine("This student is not in the class");
            }
        
            //FOR AND FOREACH IN ARRAYS
        
            int[] grades = { 66, 88, 95, 90, 100};
           
            //for (int i = 0; i < grades.Length; i++)
            //{
            //    grades[i] += 3;
            //    Console.WriteLine(grades[i]);
            //}

            foreach(int score in grades)
            {
                Console.WriteLine(score);
            }
        
            //CREATE ARRAYS
            
            int[] myArray = new int[3];
            myArray[0] = 1;
            myArray[1] = 2;
            myArray[2] = 3;

            //OR DO THIS! ^ is v

            int [] myArray2 = new int[3] {5,6,7}; //shorter
            int [] myArray3 = new int[] {5,6,7}; //even shorter
            int [] myArray4 = {5,6,7}; //shortest
   
   ------------------------------------------------------------------------
   
            //EXERCISE 3: GUESS NUMBER USING LOOPS
            
            Random randomGenerator = new Random();
            int randomNumber = randomGenerator.Next(1,11);
            int usersGuess;
            int amountOfGuesses = 0;
            do
            {
                Console.WriteLine("ENTER NUMBER");
                usersGuess = int.Parse(Console.ReadLine());
                if (usersGuess < randomNumber)
                {
                    Console.WriteLine("Your guess was too low");
                }
                else if (usersGuess > randomNumber)
                {
                    Console.WriteLine("Your guess was too high");
                }
                else
                {
                    Console.WriteLine("Guess is correct");
                }
                amountOfGuesses++;
            } while (usersGuess != randomNumber);
            Console.WriteLine("You guessed in {0} times", amountOfGuesses);
        
            //EXERCISE 2: SUM UP int between 1 and 50
            
            int sum = 0;
            for (int i = 1; i <= 50; i++)
            {
                sum += i;
            }
            Console.WriteLine("The sum is {0}", sum);
          
            //EXERCISE 2: SUMS UP INPUT IN RANGE FROM 1-50
        
            int runningTotal = 0;
            Console.WriteLine("Enter a number betweem 1 and 50");
            int number = int.Parse(Console.ReadLine());
            while (number >= 1 && number <= 50 || number !>= 1 && number <= 50)
            {
                runningTotal += number;
                Console.WriteLine("Enter a number betweem 1 and 50");
                number = int.Parse(Console.ReadLine());
            }
            Console.WriteLine("The total is {0}", runningTotal);
        
            //EXERCISE 1 ENTER VALID PAYRATE USING DO WHILE LOOP
            
            double payRate;
            do
            {
                Console.WriteLine("ENTER VALID RATE");
                payRate = double.Parse(Console.ReadLine());
            } while (payRate < 5.65 || payRate > 49.99);

            Console.WriteLine("The valid pay rate you entered is: {0}", payRate);
        
            //FOR LOOPS
            
            //int x = int.Parse(Console.ReadLine());
            //if (x > 7)
            //{
            //    if (x > 8)
            //    {
            //        if (x > 9)
            //            Console.WriteLine("Nice.");
            //    }
            //}

            //int size = 25;

            //for (int j = 0; j < size; j++)
            //{
            //    for (int i = 0; i < size; i++)
            //    {
            //        Console.Write("{0,-2}", "*");
            //    }
            //    Console.WriteLine();
            //}
        
            //WHILE LOOP

            Console.WriteLine("Hello");
            string response = Console.ReadLine();
            while (response == "again")
            {
                Console.WriteLine("Hello");
                response = Console.ReadLine();
            }

            //DO WHILE LOOP

            string response;
            do 
            {
                Console.WriteLine("Hello");
                response = Console.ReadLine();
            } while (response);
        
            //DO WHILE LOOP
            
            int x = 5;
            do
            {
                Console.WriteLine("Hello");
                x++;
            } while (x > 6) ;
        
            //FOR LOOP
            
            int x = 0*/
            ;
            //while (x < 5)
            //{
            //    Console.WriteLine("Hello");
            //    x++;
            //}

            //for (int i = 0; i < 10; i++) //variable, condition, alternation
            //{
            //    Console.WriteLine("Hello");
            //}

            Console.WriteLine("Enter an amount of times to print Hello");
            int amount = int.Parse(Console.ReadLine());

            for (int i = 0; i < amount; i++)
            {
                Console.WriteLine("Hello");
            }
        
            //WHILE LOOP
            
            int runningTotal = 0;
            Console.WriteLine("Enter a number, or -1 to quit");
            int number = int.Parse(Console.ReadLine());
            while (number != -1)
            {
                runningTotal += number;
                Console.WriteLine("Enter a number, or -1 to quit");
                number = int.Parse(Console.ReadLine());
            }
            Console.WriteLine("The total is {0}", runningTotal);
        
            //PRICE FOR LAWN MOWING
        
            //double weekly_fee_per_under_400_square_feet = 25;
            //double weekly_fee_between_400_and_600_square_feet = 35;
            //double weekly_fee_over_600_square_feet = 50;

            //Console.WriteLine("What is the length of your lawn?");
            //double length = double.Parse(Console.ReadLine());
            //Console.WriteLine("What is the width of your lawn?");
            //double width = double.Parse(Console.ReadLine());

            //double lawnSize = length * width;

            //if (lawnSize < 400)
            //{
            //    double season1 = weekly_fee_per_under_400_square_feet * 20;
            //    Console.WriteLine("The costs to maw your {0} feet lawn is ${1} per week and ${2} for the season.", lawnSize, weekly_fee_per_under_400_square_feet, season1);
            //}
            //else if (lawnSize > 400 || lawnSize < 600)
            //{
            //    double season2 = weekly_fee_between_400_and_600_square_feet * 20;
            //    Console.WriteLine("The costs to maw your {0} feet lawn is ${1} per week and ${2} for the season.", lawnSize, weekly_fee_between_400_and_600_square_feet, season2);
            //}
            //else (lawnSize > 600)
            //{
            //    double season3 = weekly_fee_over_600_square_feet * 20;
            //    Console.WriteLine("The costs to maw your {0} feet lawn is ${1} per week and ${2} for the season.", lawnSize, weekly_fee_over_600_square_feet, season3);
            //}

            //EXPLANATION

            //Console.WriteLine("Enter the lenght of your yard");
            //int lenght = int.Parse(Console.ReadLine());
            //Console.WriteLine("Enter the width of your yard.");
            //int width = int.Parse(Console.ReadLine());
            //int squareFeet = lenght * width;
            //int weeklyPrice;

            //if (squareFeet < 400)
            //{
            //    weeklyPrice = 25;
            //}
            //else if (squareFeet >= 400 && squareFeet < 600)
            //{
            //    weeklyPrice = 35;
            //}
            //else
            //{
            //    weeklyPrice = 50;
            //}

            //Console.WriteLine("The weekly fee is {0}", weeklyPrice);
            //Console.WriteLine("The 20 week season price is {0}", weeklyPrice * 20);
        
            //HOURLY PAYRATE CHECK
            
            Console.WriteLine("What is your hourly payrate?");
            double hourlyPay = double.Parse(Console.ReadLine());

            if (hourlyPay < 7.50)
            {
                Console.WriteLine("ERROR, CHANGE PAYRATE");
            }
            else if (hourlyPay > 49)
            {
                Console.WriteLine("ERROR, CHANGE PAYRATE");
            }
            else
            {
                Console.WriteLine("ACCEPTED");
            }

            Console.WriteLine("What is your hourly payrate?");
            double hourlyPayrate = double.Parse(Console.ReadLine());
            Console.WriteLine((hourlyPayrate < 7.50 || hourlyPayrate >= 49) ? "ERROR, CHANGE PAYRATE" : "ACCEPTED");
        
            //(condition) ? is true : is false
            int x = 5;
            int y = 6;

            int biggestNumber = x > y ? x : y;
            Console.WriteLine(biggestNumber);

            double testScore = double.Parse(Console.ReadLine());
            Console.WriteLine((testScore >= 60) ? "Pass" : "Fail");

            bool myBool = true;
            if (!myBool) //! means false
            {

            }

            int myInt = 5;
            if (!(myInt >= 6))
            {

            }
        
            //IF ELSE && SWITCH STATEMENTS

            Console.WriteLine("Enter year:");
            int year = int.Parse(Console.ReadLine());
            //if (year == 1)
            //{
            //    Console.WriteLine("Freshman");
            //}
            //else if (year == 2)
            //{
            //    Console.WriteLine("Sophomore");
            //}
            //else if (year == 3)
            //{
            //    Console.WriteLine("Junior");
            //}
            //else if (year == 4)
            //{
            //    Console.WriteLine("Senior");
            //}

            switch (year)
            {
                case 1:
                    {
                        Console.WriteLine("Freshman");
                        break;
                    }
                case 2:
                    {
                        Console.WriteLine("Sophomore");
                        break;
                    }
                case 3:
                    {
                        Console.WriteLine("Junior");
                        break;
                    }
                case 4:
                    {
                        Console.WriteLine("Senior");
                        break;
                    }
                default:
                    {
                        Console.WriteLine("Invalid year");
                        break;
                    }
            }
        
            //&& & ||

            //And is only true when both sides are true
            //T && T = T
            //T && F = F
            //F && F = F
            //F && T = F

            //Or is only false when both sides are false
            //T || T = T
            //F || T = T
            //F || T = T
            //F || F = F

            Console.WriteLine("Enter your age");
            int age = int.Parse(Console.ReadLine());
            Console.WriteLine("What is the movie rating?");
            char rating = char.Parse(Console.ReadLine());
            if ((age <= 12 || age >= 65) && rating == 'G')
            {
                Console.WriteLine("Discount applies.");
            }

            //AGE VERIFICATION PROGRAM

            int age = 5;
            if (age < 10);
                Console.WriteLine("Age is less than 10");
                
            //AGE VERIFICATION PROGRAM

            Console.WriteLine("Enter your age");
            int age = int.Parse(Console.ReadLine());
            if (age == 1)
            {
                Console.WriteLine("You are 1.");
            }
            else if (age == 2)
            {
                Console.WriteLine("You are 2.");
            }
            else if (age == 3)
            {
                Console.WriteLine("You are 3.");
            }

            //TOTAL AMOUNT OF MINUTES INTO HOURS

            //Console.WriteLine("Enter the total amount of time in minutes only");
            //int totalTimeInMinutes = int.Parse(Console.ReadLine());
            //int hours = totalTimeInMinutes / 60;
            //int remainingMinutes = totalTimeInMinutes % 60;

            //Console.WriteLine("{0} minutes is equal to {1} hours and {2} minutes", totalTimeInMinutes, hours, remainingMinutes);


            //NAAM

            //Console.WriteLine("What is your name?");
            //string name = Console.ReadLine();
            //Console.WriteLine("What is your lastname?");
            //string lastName = Console.ReadLine();
            //Console.WriteLine("Hello {0} {1}", name, lastName);


            //Console.WriteLine("Enter a number");
            //int number = int.Parse(Console.ReadLine());
            //number += 10;
            //Console.WriteLine("Your number is {0}",number);

            //CALCULATOR

            //Console.WriteLine("Let me show you what I can do..");
            //Console.WriteLine("Give me a number");
            //int number = int.Parse(Console.ReadLine());
            //Console.WriteLine("Thanks, now give me another number");
            //int number2 = int.Parse(Console.ReadLine());
            //Console.WriteLine("AND ANOTHER ONE!");
            //int number3 = int.Parse(Console.ReadLine());
            //int output = number + number2 + number3;
            //Console.WriteLine("Here are your numbers added up: " + output);
            //Console.WriteLine("Cool, isn't it?");

            //PRICE TO CARPET ROOM

            //const double per_square_meter = 1.5;

            //Console.WriteLine("What is the lenght of the room?");
            //double length = double.Parse(Console.ReadLine());
            //Console.WriteLine("What is the width of the room?");
            //double width = double.Parse(Console.ReadLine());

            //double area = length * width;
            //double price = area * per_square_meter;

            //Console.WriteLine("The price to carpet this {0} by {1} room is: {2}", length, width, price);

            //CONVERT HOURS TO MINUTES AND VICE VERSA

         
        }
    }
}
